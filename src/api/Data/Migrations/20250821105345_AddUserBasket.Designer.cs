// <auto-generated />
using System;
using System.Collections.Generic;
using AlasdairCooper.Reference.Api.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace AlasdairCooper.Reference.Api.Data.Migrations
{
    [DbContext(typeof(ReferenceDbContext))]
    [Migration("20250821105345_AddUserBasket")]
    partial class AddUserBasket
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.HasPostgresExtension(modelBuilder, "fuzzystrmatch");
            NpgsqlModelBuilderExtensions.HasPostgresExtension(modelBuilder, "pg_trgm");
            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("AddressAuthenticatedUser", b =>
                {
                    b.Property<int>("AddressesId")
                        .HasColumnType("integer");

                    b.Property<int>("AuthenticatedUserId")
                        .HasColumnType("integer");

                    b.HasKey("AddressesId", "AuthenticatedUserId");

                    b.HasIndex("AuthenticatedUserId");

                    b.ToTable("AddressAuthenticatedUser");
                });

            modelBuilder.Entity("AlasdairCooper.Reference.Api.Data.Entities.Addresses.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CountryId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("Addresses");

                    b.HasDiscriminator<int>("CountryId");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("AlasdairCooper.Reference.Api.Data.Entities.Basket", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Baskets");
                });

            modelBuilder.Entity("AlasdairCooper.Reference.Api.Data.Entities.BasketItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("BasketId")
                        .HasColumnType("integer");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.Property<int>("SkuId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("BasketId");

                    b.HasIndex("SkuId");

                    b.ToTable("BasketItems");
                });

            modelBuilder.Entity("AlasdairCooper.Reference.Api.Data.Entities.Content.File", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<byte[]>("Data")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("character varying(5)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("character varying(300)");

                    b.HasKey("Id");

                    b.ToTable("Files");

                    b.HasDiscriminator().HasValue("File");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("AlasdairCooper.Reference.Api.Data.Entities.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("character varying(2)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "GB",
                            Name = "United Kingdom"
                        },
                        new
                        {
                            Id = 2,
                            Code = "US",
                            Name = "United States of America"
                        });
                });

            modelBuilder.Entity("AlasdairCooper.Reference.Api.Data.Entities.DiscountStrategies.DiscountStrategy", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(21)
                        .HasColumnType("character varying(21)");

                    b.HasKey("Id");

                    b.ToTable("DiscountStrategies");

                    b.HasDiscriminator().HasValue("DiscountStrategy");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("AlasdairCooper.Reference.Api.Data.Entities.Discounts.Discount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("character varying(8)");

                    b.Property<int?>("PromotionId")
                        .HasColumnType("integer");

                    b.Property<int>("StrategyId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("PromotionId");

                    b.HasIndex("StrategyId");

                    b.ToTable("Discounts");

                    b.HasDiscriminator().HasValue("Discount");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("AlasdairCooper.Reference.Api.Data.Entities.Ordering.Dispatch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("OrderId")
                        .HasColumnType("integer");

                    b.Property<int>("State")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.ToTable("Dispatches");
                });

            modelBuilder.Entity("AlasdairCooper.Reference.Api.Data.Entities.Ordering.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AddressId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("AlasdairCooper.Reference.Api.Data.Entities.Promotion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(400)
                        .HasColumnType("character varying(400)");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<DateTimeOffset?>("EndDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<DateTimeOffset?>("StartDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Promotions");
                });

            modelBuilder.Entity("AlasdairCooper.Reference.Api.Data.Entities.Sku", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasMaxLength(400)
                        .HasColumnType("character varying(400)");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.PrimitiveCollection<string[]>("KeyPoints")
                        .IsRequired()
                        .HasColumnType("text[]");

                    b.Property<int?>("SkuDiscountId")
                        .HasColumnType("integer");

                    b.ComplexProperty<Dictionary<string, object>>("SuggestedPrice", "AlasdairCooper.Reference.Api.Data.Entities.Sku.SuggestedPrice#Money", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<int>("Currency")
                                .HasColumnType("integer");

                            b1.Property<decimal>("Value")
                                .HasColumnType("numeric");
                        });

                    b.HasKey("Id");

                    b.HasIndex("SkuDiscountId");

                    b.ToTable("Skus");
                });

            modelBuilder.Entity("AlasdairCooper.Reference.Api.Data.Entities.Stocking.Aisle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<int>("WarehouseId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("WarehouseId");

                    b.ToTable("Aisles");
                });

            modelBuilder.Entity("AlasdairCooper.Reference.Api.Data.Entities.Stocking.Bin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<int>("RackId")
                        .HasColumnType("integer");

                    b.Property<int>("SkuId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("RackId");

                    b.HasIndex("SkuId");

                    b.ToTable("Bins");
                });

            modelBuilder.Entity("AlasdairCooper.Reference.Api.Data.Entities.Stocking.DistributionCenter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AddressId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.ToTable("DistributionCenters");
                });

            modelBuilder.Entity("AlasdairCooper.Reference.Api.Data.Entities.Stocking.Rack", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AisleId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.HasKey("Id");

                    b.HasIndex("AisleId");

                    b.ToTable("Racks");
                });

            modelBuilder.Entity("AlasdairCooper.Reference.Api.Data.Entities.Stocking.Stock", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("BinId")
                        .HasColumnType("integer");

                    b.Property<int?>("DispatchId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.HasKey("Id");

                    b.HasIndex("BinId");

                    b.HasIndex("DispatchId");

                    b.ToTable("Stock");
                });

            modelBuilder.Entity("AlasdairCooper.Reference.Api.Data.Entities.Stocking.Warehouse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("DistributionCenterId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.HasKey("Id");

                    b.HasIndex("DistributionCenterId");

                    b.ToTable("Warehouses");
                });

            modelBuilder.Entity("AlasdairCooper.Reference.Api.Data.Entities.Tag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int?>("TagDiscountId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("TagDiscountId");

                    b.ToTable("Tags");
                });

            modelBuilder.Entity("AlasdairCooper.Reference.Api.Data.Entities.Users.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("character varying(5)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasDiscriminator().HasValue("User");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("SkuTag", b =>
                {
                    b.Property<int>("SkusId")
                        .HasColumnType("integer");

                    b.Property<int>("TagsId")
                        .HasColumnType("integer");

                    b.HasKey("SkusId", "TagsId");

                    b.HasIndex("TagsId");

                    b.ToTable("SkuTag");
                });

            modelBuilder.Entity("AlasdairCooper.Reference.Api.Data.Entities.Addresses.UkAddress", b =>
                {
                    b.HasBaseType("AlasdairCooper.Reference.Api.Data.Entities.Addresses.Address");

                    b.Property<string>("County")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Line1")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Line2")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Line3")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("TownCity")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.ComplexProperty<Dictionary<string, object>>("Postcode", "AlasdairCooper.Reference.Api.Data.Entities.Addresses.UkAddress.Postcode#Postcode", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<string>("Incode")
                                .IsRequired()
                                .HasMaxLength(3)
                                .HasColumnType("character varying(3)");

                            b1.Property<string>("Outcode")
                                .IsRequired()
                                .HasMaxLength(4)
                                .HasColumnType("character varying(4)");
                        });

                    b.HasDiscriminator().HasValue(1);
                });

            modelBuilder.Entity("AlasdairCooper.Reference.Api.Data.Entities.Content.Media", b =>
                {
                    b.HasBaseType("AlasdairCooper.Reference.Api.Data.Entities.Content.File");

                    b.Property<string>("MediaType")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("character varying(300)");

                    b.Property<int?>("PromotionId")
                        .HasColumnType("integer");

                    b.Property<int?>("SkuId")
                        .HasColumnType("integer");

                    b.HasIndex("PromotionId");

                    b.HasIndex("SkuId");

                    b.HasDiscriminator().HasValue("media");
                });

            modelBuilder.Entity("AlasdairCooper.Reference.Api.Data.Entities.DiscountStrategies.BuyNForXPriceDiscountStrategy", b =>
                {
                    b.HasBaseType("AlasdairCooper.Reference.Api.Data.Entities.DiscountStrategies.DiscountStrategy");

                    b.Property<int>("N")
                        .HasColumnType("integer");

                    b.ComplexProperty<Dictionary<string, object>>("X", "AlasdairCooper.Reference.Api.Data.Entities.DiscountStrategies.BuyNForXPriceDiscountStrategy.X#Money", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<int>("Currency")
                                .ValueGeneratedOnUpdateSometimes()
                                .HasColumnType("integer");

                            b1.Property<decimal>("Value")
                                .ValueGeneratedOnUpdateSometimes()
                                .HasColumnType("numeric");
                        });

                    b.ToTable("DiscountStrategies", t =>
                        {
                            t.Property("N")
                                .HasColumnName("BuyNForXPriceDiscountStrategy_N");
                        });

                    b.HasDiscriminator().HasValue("buy-n-for-x");
                });

            modelBuilder.Entity("AlasdairCooper.Reference.Api.Data.Entities.DiscountStrategies.BuyNGetMFreeDiscountStrategy", b =>
                {
                    b.HasBaseType("AlasdairCooper.Reference.Api.Data.Entities.DiscountStrategies.DiscountStrategy");

                    b.Property<int>("M")
                        .HasColumnType("integer");

                    b.Property<int>("N")
                        .HasColumnType("integer");

                    b.HasDiscriminator().HasValue("buy-n-get-m-free");
                });

            modelBuilder.Entity("AlasdairCooper.Reference.Api.Data.Entities.DiscountStrategies.FlatPercentageDiscountStrategy", b =>
                {
                    b.HasBaseType("AlasdairCooper.Reference.Api.Data.Entities.DiscountStrategies.DiscountStrategy");

                    b.ComplexProperty<Dictionary<string, object>>("Percentage", "AlasdairCooper.Reference.Api.Data.Entities.DiscountStrategies.FlatPercentageDiscountStrategy.Percentage#BoundedPercentage", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<decimal>("Value")
                                .HasColumnType("numeric");
                        });

                    b.HasDiscriminator().HasValue("flat-percent");
                });

            modelBuilder.Entity("AlasdairCooper.Reference.Api.Data.Entities.DiscountStrategies.FlatValueDiscountStrategy", b =>
                {
                    b.HasBaseType("AlasdairCooper.Reference.Api.Data.Entities.DiscountStrategies.DiscountStrategy");

                    b.ComplexProperty<Dictionary<string, object>>("Amount", "AlasdairCooper.Reference.Api.Data.Entities.DiscountStrategies.FlatValueDiscountStrategy.Amount#Money", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<int>("Currency")
                                .HasColumnType("integer");

                            b1.Property<decimal>("Value")
                                .HasColumnType("numeric");
                        });

                    b.HasDiscriminator().HasValue("flat-value");
                });

            modelBuilder.Entity("AlasdairCooper.Reference.Api.Data.Entities.DiscountStrategies.SpendXGetYPercentOffDiscountStrategy", b =>
                {
                    b.HasBaseType("AlasdairCooper.Reference.Api.Data.Entities.DiscountStrategies.DiscountStrategy");

                    b.ComplexProperty<Dictionary<string, object>>("X", "AlasdairCooper.Reference.Api.Data.Entities.DiscountStrategies.SpendXGetYPercentOffDiscountStrategy.X#Money", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<int>("Currency")
                                .ValueGeneratedOnUpdateSometimes()
                                .HasColumnType("integer");

                            b1.Property<decimal>("Value")
                                .ValueGeneratedOnUpdateSometimes()
                                .HasColumnType("numeric");
                        });

                    b.ComplexProperty<Dictionary<string, object>>("Y", "AlasdairCooper.Reference.Api.Data.Entities.DiscountStrategies.SpendXGetYPercentOffDiscountStrategy.Y#BoundedPercentage", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<decimal>("Value")
                                .HasColumnType("numeric");
                        });

                    b.HasDiscriminator().HasValue("spend-x-get-y-off");
                });

            modelBuilder.Entity("AlasdairCooper.Reference.Api.Data.Entities.Discounts.SkuDiscount", b =>
                {
                    b.HasBaseType("AlasdairCooper.Reference.Api.Data.Entities.Discounts.Discount");

                    b.HasDiscriminator().HasValue("sku");
                });

            modelBuilder.Entity("AlasdairCooper.Reference.Api.Data.Entities.Discounts.TagDiscount", b =>
                {
                    b.HasBaseType("AlasdairCooper.Reference.Api.Data.Entities.Discounts.Discount");

                    b.HasDiscriminator().HasValue("tag");
                });

            modelBuilder.Entity("AlasdairCooper.Reference.Api.Data.Entities.Users.AnonymousUser", b =>
                {
                    b.HasBaseType("AlasdairCooper.Reference.Api.Data.Entities.Users.User");

                    b.Property<string>("CorrelationId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasDiscriminator().HasValue("anon");
                });

            modelBuilder.Entity("AlasdairCooper.Reference.Api.Data.Entities.Users.AuthenticatedUser", b =>
                {
                    b.HasBaseType("AlasdairCooper.Reference.Api.Data.Entities.Users.User");

                    b.Property<int?>("DeliveryAddressId")
                        .HasColumnType("integer");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("LastName")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.PrimitiveCollection<string[]>("MiddleNames")
                        .IsRequired()
                        .HasColumnType("text[]");

                    b.HasIndex("DeliveryAddressId")
                        .IsUnique();

                    b.HasDiscriminator().HasValue("known");
                });

            modelBuilder.Entity("AddressAuthenticatedUser", b =>
                {
                    b.HasOne("AlasdairCooper.Reference.Api.Data.Entities.Addresses.Address", null)
                        .WithMany()
                        .HasForeignKey("AddressesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AlasdairCooper.Reference.Api.Data.Entities.Users.AuthenticatedUser", null)
                        .WithMany()
                        .HasForeignKey("AuthenticatedUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AlasdairCooper.Reference.Api.Data.Entities.Addresses.Address", b =>
                {
                    b.HasOne("AlasdairCooper.Reference.Api.Data.Entities.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("AlasdairCooper.Reference.Api.Data.Entities.Basket", b =>
                {
                    b.HasOne("AlasdairCooper.Reference.Api.Data.Entities.Users.User", "User")
                        .WithOne("Basket")
                        .HasForeignKey("AlasdairCooper.Reference.Api.Data.Entities.Basket", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("AlasdairCooper.Reference.Api.Data.Entities.BasketItem", b =>
                {
                    b.HasOne("AlasdairCooper.Reference.Api.Data.Entities.Basket", null)
                        .WithMany("Items")
                        .HasForeignKey("BasketId");

                    b.HasOne("AlasdairCooper.Reference.Api.Data.Entities.Sku", "Sku")
                        .WithMany()
                        .HasForeignKey("SkuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Sku");
                });

            modelBuilder.Entity("AlasdairCooper.Reference.Api.Data.Entities.Discounts.Discount", b =>
                {
                    b.HasOne("AlasdairCooper.Reference.Api.Data.Entities.Promotion", null)
                        .WithMany("Discounts")
                        .HasForeignKey("PromotionId");

                    b.HasOne("AlasdairCooper.Reference.Api.Data.Entities.DiscountStrategies.DiscountStrategy", "Strategy")
                        .WithMany()
                        .HasForeignKey("StrategyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Strategy");
                });

            modelBuilder.Entity("AlasdairCooper.Reference.Api.Data.Entities.Ordering.Dispatch", b =>
                {
                    b.HasOne("AlasdairCooper.Reference.Api.Data.Entities.Ordering.Order", null)
                        .WithMany("Dispatches")
                        .HasForeignKey("OrderId");
                });

            modelBuilder.Entity("AlasdairCooper.Reference.Api.Data.Entities.Ordering.Order", b =>
                {
                    b.HasOne("AlasdairCooper.Reference.Api.Data.Entities.Addresses.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Address");
                });

            modelBuilder.Entity("AlasdairCooper.Reference.Api.Data.Entities.Sku", b =>
                {
                    b.HasOne("AlasdairCooper.Reference.Api.Data.Entities.Discounts.SkuDiscount", null)
                        .WithMany("Skus")
                        .HasForeignKey("SkuDiscountId");
                });

            modelBuilder.Entity("AlasdairCooper.Reference.Api.Data.Entities.Stocking.Aisle", b =>
                {
                    b.HasOne("AlasdairCooper.Reference.Api.Data.Entities.Stocking.Warehouse", "Warehouse")
                        .WithMany("Aisles")
                        .HasForeignKey("WarehouseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Warehouse");
                });

            modelBuilder.Entity("AlasdairCooper.Reference.Api.Data.Entities.Stocking.Bin", b =>
                {
                    b.HasOne("AlasdairCooper.Reference.Api.Data.Entities.Stocking.Rack", "Rack")
                        .WithMany("Bins")
                        .HasForeignKey("RackId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AlasdairCooper.Reference.Api.Data.Entities.Sku", "Sku")
                        .WithMany("Bins")
                        .HasForeignKey("SkuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rack");

                    b.Navigation("Sku");
                });

            modelBuilder.Entity("AlasdairCooper.Reference.Api.Data.Entities.Stocking.DistributionCenter", b =>
                {
                    b.HasOne("AlasdairCooper.Reference.Api.Data.Entities.Addresses.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Address");
                });

            modelBuilder.Entity("AlasdairCooper.Reference.Api.Data.Entities.Stocking.Rack", b =>
                {
                    b.HasOne("AlasdairCooper.Reference.Api.Data.Entities.Stocking.Aisle", "Aisle")
                        .WithMany("Racks")
                        .HasForeignKey("AisleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Aisle");
                });

            modelBuilder.Entity("AlasdairCooper.Reference.Api.Data.Entities.Stocking.Stock", b =>
                {
                    b.HasOne("AlasdairCooper.Reference.Api.Data.Entities.Stocking.Bin", "Bin")
                        .WithMany("Stock")
                        .HasForeignKey("BinId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AlasdairCooper.Reference.Api.Data.Entities.Ordering.Dispatch", null)
                        .WithMany("Items")
                        .HasForeignKey("DispatchId");

                    b.Navigation("Bin");
                });

            modelBuilder.Entity("AlasdairCooper.Reference.Api.Data.Entities.Stocking.Warehouse", b =>
                {
                    b.HasOne("AlasdairCooper.Reference.Api.Data.Entities.Stocking.DistributionCenter", "DistributionCenter")
                        .WithMany("Warehouses")
                        .HasForeignKey("DistributionCenterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DistributionCenter");
                });

            modelBuilder.Entity("AlasdairCooper.Reference.Api.Data.Entities.Tag", b =>
                {
                    b.HasOne("AlasdairCooper.Reference.Api.Data.Entities.Discounts.TagDiscount", null)
                        .WithMany("Tags")
                        .HasForeignKey("TagDiscountId");
                });

            modelBuilder.Entity("SkuTag", b =>
                {
                    b.HasOne("AlasdairCooper.Reference.Api.Data.Entities.Sku", null)
                        .WithMany()
                        .HasForeignKey("SkusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AlasdairCooper.Reference.Api.Data.Entities.Tag", null)
                        .WithMany()
                        .HasForeignKey("TagsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AlasdairCooper.Reference.Api.Data.Entities.Content.Media", b =>
                {
                    b.HasOne("AlasdairCooper.Reference.Api.Data.Entities.Promotion", null)
                        .WithMany("Media")
                        .HasForeignKey("PromotionId");

                    b.HasOne("AlasdairCooper.Reference.Api.Data.Entities.Sku", null)
                        .WithMany("Media")
                        .HasForeignKey("SkuId");
                });

            modelBuilder.Entity("AlasdairCooper.Reference.Api.Data.Entities.Users.AuthenticatedUser", b =>
                {
                    b.HasOne("AlasdairCooper.Reference.Api.Data.Entities.Addresses.Address", "DeliveryAddress")
                        .WithOne()
                        .HasForeignKey("AlasdairCooper.Reference.Api.Data.Entities.Users.AuthenticatedUser", "DeliveryAddressId");

                    b.Navigation("DeliveryAddress");
                });

            modelBuilder.Entity("AlasdairCooper.Reference.Api.Data.Entities.Basket", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("AlasdairCooper.Reference.Api.Data.Entities.Ordering.Dispatch", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("AlasdairCooper.Reference.Api.Data.Entities.Ordering.Order", b =>
                {
                    b.Navigation("Dispatches");
                });

            modelBuilder.Entity("AlasdairCooper.Reference.Api.Data.Entities.Promotion", b =>
                {
                    b.Navigation("Discounts");

                    b.Navigation("Media");
                });

            modelBuilder.Entity("AlasdairCooper.Reference.Api.Data.Entities.Sku", b =>
                {
                    b.Navigation("Bins");

                    b.Navigation("Media");
                });

            modelBuilder.Entity("AlasdairCooper.Reference.Api.Data.Entities.Stocking.Aisle", b =>
                {
                    b.Navigation("Racks");
                });

            modelBuilder.Entity("AlasdairCooper.Reference.Api.Data.Entities.Stocking.Bin", b =>
                {
                    b.Navigation("Stock");
                });

            modelBuilder.Entity("AlasdairCooper.Reference.Api.Data.Entities.Stocking.DistributionCenter", b =>
                {
                    b.Navigation("Warehouses");
                });

            modelBuilder.Entity("AlasdairCooper.Reference.Api.Data.Entities.Stocking.Rack", b =>
                {
                    b.Navigation("Bins");
                });

            modelBuilder.Entity("AlasdairCooper.Reference.Api.Data.Entities.Stocking.Warehouse", b =>
                {
                    b.Navigation("Aisles");
                });

            modelBuilder.Entity("AlasdairCooper.Reference.Api.Data.Entities.Users.User", b =>
                {
                    b.Navigation("Basket")
                        .IsRequired();
                });

            modelBuilder.Entity("AlasdairCooper.Reference.Api.Data.Entities.Discounts.SkuDiscount", b =>
                {
                    b.Navigation("Skus");
                });

            modelBuilder.Entity("AlasdairCooper.Reference.Api.Data.Entities.Discounts.TagDiscount", b =>
                {
                    b.Navigation("Tags");
                });
#pragma warning restore 612, 618
        }
    }
}
