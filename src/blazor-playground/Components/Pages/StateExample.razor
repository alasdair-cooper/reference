@using AlasdairCooper.Reference.BlazorPlayground.Utilities
@using AlasdairCooper.Reference.Components.State

@page "/state"

<h1>States</h1>

<h2>From Value</h2>

<StateView Store="StateStore.FromValue<object, User>(GetUser())">
    @context.Value.ToDisplayString()
</StateView>

<h2>From Factory</h2>

<StateView Store="_fromFactoryStateStore">
    @context.Value.ToDisplayString()
</StateView>

<h2>From Factory (with param)</h2>

<button @onclick="() => _currentIndex = _currentIndex > 0 ? _currentIndex - 1 : _currentIndex">Prev</button>

<StateView Store="_fromFactoryWithParamStateStore" Parameters="_currentIndex">
    @context.Value.ToDisplayString()
</StateView>

<button @onclick="() => _currentIndex++">Next</button>

@code {

    int _currentIndex;
    private readonly StateStore<object, User> _fromFactoryStateStore = StateStore.FromFactory<object, User>(_ => GetUser());
    private readonly StateStore<int, User> _fromFactoryWithParamStateStore = StateStore.FromFactory<int, User>(GetUser);

    private static User GetUser(int index = 0) => UserGenerator.Users.Skip(index).First();

}